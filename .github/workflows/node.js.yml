# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: package-lock.json

    - name: Create .env.production file
      run: |
          echo "VITE_API_KEY=${{ secrets.API_KEY }}" >> .env
          echo "VITE_AUTH_DOMAIN=${{ secrets.AUTH_DOMAIN }}" >> .env
          echo "VITE_PROJECT_ID=${{ secrets.PROJECT_ID }}" >> .env
          echo "VITE_STORAGE_BUCKET=${{ secrets.STORAGE_BUCKET }}" >> .env
          echo "VITE_MESSAGING_SENDER_ID=${{ secrets.MESSAGING_SENDER_ID }}" >> .env
          echo "VITE_APP_ID=${{ secrets.APP_ID }}" >> .env
          echo "VITE_MEASUREMENT_ID=${{ secrets.MEASUREMENT_ID }}" >> .env


    - run: npm ci
    - run: npm run build --if-present
    - run: npm test

    - name: Deploy with gh-pages
      if: matrix.node-version == '20.x'  # Only deploy from Node 20.x to prevent conflicts
      run: |
        git remote set-url origin https://git:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
        npm run deploy -- -u "github-actions-bot <support+actions@github.com>"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
